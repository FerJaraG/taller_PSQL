1.- CREATE DATABASE call_list;
2.- CREATE TABLE users(id SERIAL PRIMARY KEY, first_name varchar (50), email varchar (100));
3.- INSERT INTO users (first_name,email) VALUES ('Carlos', 'carlos@mail.com');
4.- INSERT INTO users (first_name,email) VALUES ('Laura', 'laura@mail.com');
5.- CREATE TABLE calls(id SERIAL PRIMARY KEY, phone varchar(20), date date, user_id INTEGER REFERENCES users(id));
6.- ALTER TABLE users ADD COLUMN last_name varchar(50);
8.- UPDATE users set last_name = 'Jara' where first_name = 'Carlos';
9.- UPDATE users set last_name = 'Perez' where first_name = 'Laura';
10.- INSERT INTO calls (phone,date,user_id,length) VALUES ('345678','2018-01-01', 2, 5);
INSERT INTO calls (phone,date,user_id,length) VALUES ('445679','2018-01-08', 2, 3);
INSERT INTO calls (phone,date,user_id,length) VALUES ('645677','2018-01-13', 2, 6);
INSERT INTO calls (phone,date,user_id,length) VALUES ('745676','2018-01-19', 2, 10);
INSERT INTO calls (phone,date,user_id,length) VALUES ('345675','2018-02-01', 2, 3);
INSERT INTO calls (phone,date,user_id,length) VALUES ('845674','2018-02-06', 2, 2);
11.- INSERT INTO calls (phone,date,user_id,length) VALUES ('6789077','2018-01-01', 1, 2);
 INSERT INTO calls (phone,date,user_id,length) VALUES ('9789077','2018-01-02', 1, 3);
 INSERT INTO calls (phone,date,user_id,length) VALUES ('0889077','2018-01-03', 1, 5);
 INSERT INTO calls (phone,date,user_id,length) VALUES ('4789077','2018-01-04', 1, 3);
12.- INSERT INTO users (first_name, email, last_name) VALUES ('Fernanda','fernanda@mail.com', 'Jara');
13.- SELECT users.first_name,count(calls.user_id) FROM calls INNER JOIN users ON calls.user_id = users.id GROUP BY calls.user_id,users.first_name;
14.- SELECT users.first_name,count(calls.user_id) maximum FROM users INNER JOIN calls ON users.id = calls.user_id GROUP BY users.first_name,calls.user_id ORDER BY maximum DESC LIMIT 1; 
15.- SELECT users.first_name, calls.date FROM users INNER JOIN calls on users.id = calls.user_id where users.id = 1 order by calls.date DESC;
16.- SELECT users.first_name,calls.length FROM users INNER JOIN calls ON users.id = calls.user_id ORDER BY calls.length DESC LIMIT 1;
17.- SELECT users.first_name,SUM(calls.length) FROM users INNER JOIN calls ON users.id = calls.user_id GROUP BY users.first_name;
18.- SELECT users.first_name,count(calls.user_id) FROM users INNER JOIN calls ON users.id = calls.user_id GROUP BY users.first_name HAVING count(calls.user_id) < 5;














